version: '2'

services:
  lambda:
    container_name: lambda
    image: lambci/lambda:python3.6
    environment:
      - AWS_REGION=$AWS_DEFAULT_REGION
      - AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN
      - AWS_SECURITY_TOKEN=$AWS_SECURITY_TOKEN
      - AWS_LAMBDA_EVENT_BODY=$AWS_LAMBDA_EVENT_BODY
      - ES_HOST=elasticsearch
      - ES_AUTH_ENABLED=False
      - ES_PORT=9200
      - ES_PROTOCOL=http
      - HOSTNAME=$HOSTNAME
      - ENDPOINT_URL=http://localstack:4572
    volumes:
      - .:/var/task
    networks:
      - mynetwork
    links:
      - localstack
      - elasticsearch
  localstack:
    image: localstack/localstack
    ports:
      - 4572:4572
    environment:
      - DEFAULT_REGION=us-east-1
      - SERVICES=lambda,s3
      - DEBUG=1
      - LAMBDA_EXECUTOR=docker
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOSTNAME=localstack
      - HOSTNAME_EXTERNAL=localstack
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/localstack:/tmp/localstack
    networks:
      - mynetwork
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.3
    ports:
      - 9200:9200
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
    networks:
      - mynetwork
networks:
  mynetwork:
